name: Build and Update Public Branch

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-and-update-public:
    runs-on: ubuntu-latest
    env:
      HUGO_BASEURL: https://btuckerc.com
      HUGO_ENV: production
      HUGO_ENABLEGITINFO: true
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: Clean and prepare directories
        run: |
          rm -rf public
          mkdir -p content/Blog-Attachments
          mkdir -p public/blog-posts/Blog-Attachments

      - name: Copy attachments to content directory
        run: |
          # First, copy any existing attachments from the repo
          if [ -d "static/images" ]; then
            cp -r static/images/* content/Blog-Attachments/ || true
          fi

      - name: Build Hugo site
        run: |
          echo "Building with base URL: $HUGO_BASEURL"
          hugo -t paper --minify --baseURL "$HUGO_BASEURL" --gc --environment production

      - name: Process attachments
        run: |
          chmod +x ./scripts/migrate_attachments.sh
          # Use the content directory itself as the source
          ATTACHMENTS_DIR="$(pwd)/content/Blog-Attachments" ./scripts/migrate_attachments.sh

      - name: Verify attachments
        run: |
          echo "Checking attachment directories:"
          echo "Content attachments:"
          ls -la content/Blog-Attachments || true
          echo "Public attachments:"
          ls -la public/blog-posts/Blog-Attachments || true

          # If attachments ended up in the wrong place, move them
          if [ -d "public/Blog-Attachments" ]; then
            echo "Moving attachments to correct location..."
            mkdir -p public/blog-posts/Blog-Attachments
            mv public/Blog-Attachments/* public/blog-posts/Blog-Attachments/ || true
            rm -rf public/Blog-Attachments
          fi

          # Ensure the Blog-Attachments directory exists and has content
          if [ ! -d "public/blog-posts/Blog-Attachments" ] || [ -z "$(ls -A public/blog-posts/Blog-Attachments)" ]; then
            echo "Copying attachments to public directory..."
            mkdir -p public/blog-posts/Blog-Attachments
            cp -r content/Blog-Attachments/* public/blog-posts/Blog-Attachments/ || true
          fi

      - name: Update public branch
        run: |
          # Configure Git
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          # Save the current public directory
          mv public public_temp

          # Create/switch to public branch
          git checkout public 2>/dev/null || git checkout -b public

          # Clear existing contents
          git rm -rf . || true

          # Move the built content back
          mv public_temp/* .
          rm -rf public_temp

          # Add all content
          git add .

          # Commit and push
          git commit -m "Update public branch with latest build" || echo "No changes to commit"
          git push origin public -f
