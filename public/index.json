[{"content":"Workspace Boilerplate A comprehensive collection of scripts and configurations for setting up and managing development environments. Features project initialization, environment setup, and configuration management.\nQuick Start Initialize your macOS development environment:\ngit clone https://github.com/btuckerc/boilerplate.git \u0026amp;\u0026amp; cd boilerplate \u0026amp;\u0026amp; ./utils/init-mac There are other setup tools you can explore as well:\n./setup/setup-vscode ./utils/init-project my-project ./utils/scripts/readme.sh Directory Structure . ├── LICENSE # MIT License ├── README.md # This file ├── applications-list.md # List of recommended applications ├── bash_aliases # Bash aliases ├── bash_profile # Bash profile configuration ├── bashrc # Bash shell configuration ├── zsh_aliases # Zsh aliases ├── zprofile # Zsh profile configuration ├── zshrc # Zsh shell configuration ├── config # Configuration files │ ├── kitty/ # Kitty configuration │ │ ├── kitty.conf # Kitty terminal config │ │ └── current-theme.conf # Current Kitty theme │ ├── vscode/ # VSCode configuration │ │ ├── settings.json # Editor settings │ │ ├── snippets/ # Code snippets │ │ └── extensions/ # VSCode extensions │ │ └── current-theme/ # Current theme extension │ └── tmux/ # Tmux configuration │ └── plugins/ # Tmux plugins │ └── tpm/ # Tmux Plugin Manager (submodule) ├── nvim # Neovim configuration │ └── lua/ # Lua configuration files │ └── tucker/ # Personal configuration │ └── core/ # Core configuration │ └── plugins/ # Plugin configuration │ └── themes/ # Theme files │ └── current-theme.lua # Current theme ├── setup # Environment setup scripts │ ├── setup-go.sh # Go environment setup │ ├── setup-py.sh # Python environment setup │ ├── setup-git.sh # Git configuration setup │ ├── setup-kitty.sh # Kitty terminal setup │ ├── setup-vscode.sh # VSCode setup │ ├── setup-supabase.sh # Supabase environment setup │ └── setup-tailwind.sh # Tailwind CSS setup ├── templates # Project templates │ ├── go # Go project template │ └── python # Python project template └── utils # Utility scripts ├── init-mac # macOS environment setup ├── init-project # Project initialization ├── fonts # Custom font files │ ├── MesloLGLNerdFont-Bold.ttf # Meslo Nerd Font Bold │ ├── MesloLGLNerdFont-BoldItalic.ttf # Meslo Nerd Font Bold Italic │ ├── MesloLGLNerdFont-Italic.ttf # Meslo Nerd Font Italic │ └── MesloLGLNerdFont-Regular.ttf # Meslo Nerd Font Regular └── scripts # Shell script utilities ├── common.sh # Common shell functions ├── convert-kitty-theme-nvim.sh # Theme converter for Neovim ├── convert-kitty-theme-vscode.sh # Theme converter for VSCode ├── fix-nvim-symlink.sh # Neovim symlink fixer ├── readme.sh # README generator ├── tree.sh # Directory tree generator └── bash-to-zsh.sh # Shell conversion utility TODO make sure brew install glow make sure starship can be installed Features macOS Environment Setup # Complete environment setup ./utils/init-mac # Setup with specific shell ./utils/init-mac -s zsh # Skip Kitty terminal installation ./utils/init-mac -k # Skip Homebrew installation ./utils/init-mac -b The init-mac script sets up:\nShell configuration (Bash or Zsh) Homebrew package manager Kitty terminal with themes Custom Meslo Nerd Fonts Neovim editor with configuration Tmux with configuration Development environment Shell Configuration Support for both Bash and Zsh:\n# Bash configuration ln -s $(pwd)/bashrc ~/.bashrc ln -s $(pwd)/bash_profile ~/.bash_profile ln -s $(pwd)/bash_aliases ~/.bash_aliases # Zsh configuration ln -s $(pwd)/zshrc ~/.zshrc ln -s $(pwd)/zprofile ~/.zprofile ln -s $(pwd)/zsh_aliases ~/.zsh_aliases Project Initialization # Create a new Python project ./init-project my-project # Create a new Go project ./init-project -l go my-project # Initialize in current directory ./init-project --lang python # Specify Python version ./init-project my-project -v 3.11 Environment Setup # Set up Python environment ./setup/setup-py [--version 3.13] # Set up Go environment ./setup/setup-go # Set up Git configuration ./setup-git # Set up Kitty terminal ./setup-kitty # Set up Tailwind CSS ./setup-tailwind # Set up Supabase ./setup-supabase Utility Scripts Directory Tree Generation ./utils/scripts/tree.sh [-p] [-d DEPTH] [-e EXCLUDE] README Generation ./utils/scripts/readme.sh [DIRECTORY] [-f] Theme Conversion ./utils/scripts/convert-kitty-theme-nvim.sh input.conf output.lua Project Templates Python Template Project structure Virtual environment setup Testing configuration README template Requirements management Go Template Standard layout Go modules Basic main package Test setup Makefile Editor Configuration VSCode Configuration Optimized settings Custom snippets Keyboard shortcuts Recommended extensions Automatic theme conversion from Kitty themes Integrated theme extension management Symlinked configuration for version control Automatic backup of existing configurations User-specific theme publisher ID # Set up VSCode configuration ./setup/setup-vscode.sh # Features: - Symlinks settings.json to repository - Sets up custom theme extension - Preserves existing extensions - Creates backups of existing configs - Manages theme conversion and updates Theme Management # Convert Kitty theme to VSCode theme ./utils/scripts/convert-kitty-theme-vscode.sh # Features: - Extracts colors from Kitty themes - Generates VSCode-compatible theme files - Creates proper extension structure - Uses current user as publisher ID - Sets up bidirectional symlinks - Preserves existing themes - Creates automatic backups The theme conversion scripts automatically:\nExtract colors from Kitty themes Generate compatible theme files Set up proper symlinks for version control Install as VSCode extension (for VSCode themes) Update tab bar colors (for Neovim themes) Create backups of existing configurations Use system username as publisher ID Enable bidirectional editing (changes reflect in both locations) Neovim Configuration Modern setup with:\nLSP support (Mason) Treesitter Telescope Git integration Copilot Custom themes with Kitty theme sync Completion (nvim-cmp) Terminal Configuration Kitty terminal setup Multiple themes Alacritty config Starship prompt Tmux configuration with TPM (Tmux Plugin Manager) Automatic plugin installation Sensible defaults Session management (resurrect \u0026amp; continuum) System clipboard integration (yank) yazi Setup Install yazi brew install yazi ffmpegthumbnailer ffmpeg sevenzip jq poppler fd ripgrep fzf zoxide imagemagick font-symbols-only-nerd-font Development Prerequisites macOS (primary support) Git Bash 3.2+ or Zsh Installation Clone the repository with submodules: git clone --recursive https://github.com/YOUR_USERNAME/boilerplate.git If you\u0026rsquo;ve already cloned the repository, initialize submodules: git submodule update --init --recursive Run the setup script: ./utils/init-mac Submodules This repository uses Git submodules for certain components:\nTPM (Tmux Plugin Manager) - config/tmux/plugins/tpm Update TPM after installation:\ngit submodule update --init --recursive To update submodules to their latest versions:\ngit submodule update --remote Contributing Fork the repository Create feature branch Commit changes Push to branch Open Pull Request Adding New Scripts Follow naming convention Add license header Include documentation Update README Update lexicon.md ","permalink":"https://btuckerc.github.io/Blog/blog-posts/2024-12-22-sharing-my-dev-settings/","summary":"\u003ch1 id=\"workspace-boilerplate\"\u003eWorkspace Boilerplate\u003c/h1\u003e\n\u003cp\u003eA comprehensive collection of scripts and configurations for setting up and managing development environments. Features project initialization, environment setup, and configuration management.\u003c/p\u003e\n\u003ch2 id=\"quick-start\"\u003eQuick Start\u003c/h2\u003e\n\u003cp\u003eInitialize your macOS development environment:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit clone https://github.com/btuckerc/boilerplate.git \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e boilerplate \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e ./utils/init-mac\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThere are other setup tools you can explore as well:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e./setup/setup-vscode\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e./utils/init-project my-project\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e./utils/scripts/readme.sh\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"directory-structure\"\u003eDirectory Structure\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e.\n├── LICENSE                                    # MIT License\n├── README.md                                  # This file\n├── applications-list.md                       # List of recommended applications\n├── bash_aliases                               # Bash aliases\n├── bash_profile                               # Bash profile configuration\n├── bashrc                                     # Bash shell configuration\n├── zsh_aliases                                # Zsh aliases\n├── zprofile                                   # Zsh profile configuration\n├── zshrc                                      # Zsh shell configuration\n├── config                                     # Configuration files\n│   ├── kitty/                                 # Kitty configuration\n│   │   ├── kitty.conf                         # Kitty terminal config\n│   │   └── current-theme.conf                 # Current Kitty theme\n│   ├── vscode/                                # VSCode configuration\n│   │   ├── settings.json                      # Editor settings\n│   │   ├── snippets/                          # Code snippets\n│   │   └── extensions/                        # VSCode extensions\n│   │       └── current-theme/                 # Current theme extension\n│   └── tmux/                                  # Tmux configuration\n│       └── plugins/                           # Tmux plugins\n│           └── tpm/                           # Tmux Plugin Manager (submodule)\n├── nvim                                       # Neovim configuration\n│   └── lua/                                   # Lua configuration files\n│       └── tucker/                            # Personal configuration\n│           └── core/                          # Core configuration\n│           └── plugins/                       # Plugin configuration\n│           └── themes/                        # Theme files\n│               └── current-theme.lua          # Current theme\n├── setup                                      # Environment setup scripts\n│   ├── setup-go.sh                            # Go environment setup\n│   ├── setup-py.sh                            # Python environment setup\n│   ├── setup-git.sh                           # Git configuration setup\n│   ├── setup-kitty.sh                         # Kitty terminal setup\n│   ├── setup-vscode.sh                        # VSCode setup\n│   ├── setup-supabase.sh                      # Supabase environment setup\n│   └── setup-tailwind.sh                      # Tailwind CSS setup\n├── templates                                  # Project templates\n│   ├── go                                     # Go project template\n│   └── python                                 # Python project template\n└── utils                                      # Utility scripts\n    ├── init-mac                               # macOS environment setup\n    ├── init-project                           # Project initialization\n    ├── fonts                                  # Custom font files\n    │   ├── MesloLGLNerdFont-Bold.ttf          # Meslo Nerd Font Bold\n    │   ├── MesloLGLNerdFont-BoldItalic.ttf    # Meslo Nerd Font Bold Italic\n    │   ├── MesloLGLNerdFont-Italic.ttf        # Meslo Nerd Font Italic\n    │   └── MesloLGLNerdFont-Regular.ttf       # Meslo Nerd Font Regular\n    └── scripts                                # Shell script utilities\n        ├── common.sh                          # Common shell functions\n        ├── convert-kitty-theme-nvim.sh        # Theme converter for Neovim\n        ├── convert-kitty-theme-vscode.sh      # Theme converter for VSCode\n        ├── fix-nvim-symlink.sh                # Neovim symlink fixer\n        ├── readme.sh                          # README generator\n        ├── tree.sh                            # Directory tree generator\n        └── bash-to-zsh.sh                     # Shell conversion utility\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"todo\"\u003eTODO\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e make sure brew install glow\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e make sure starship can be installed\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"features\"\u003eFeatures\u003c/h2\u003e\n\u003ch3 id=\"macos-environment-setup\"\u003emacOS Environment Setup\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Complete environment setup\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e./utils/init-mac\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Setup with specific shell\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e./utils/init-mac -s zsh\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Skip Kitty terminal installation\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e./utils/init-mac -k\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Skip Homebrew installation\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e./utils/init-mac -b\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe \u003ccode\u003einit-mac\u003c/code\u003e script sets up:\u003c/p\u003e","title":"Sharing my dev settings"},{"content":"Overview This post explores setting up a Blog with Obsidian \u0026amp; Hugo, discussing key concepts and practical applications.\nSetting Up the Vault ln -sf /Users/tucker/Documents/GitHub/Blog/content/Blog-Posts ~/Documents/00-Vault/00\\ -\\ Inbox/07\\ -\\ BLOG ln -sf /Users/tucker/Documents/GitHub/Blog/content/Blog-Attachments ~/Documents/00-Vault/00\\ -\\ Inbox/07\\ -\\ BLOG https://github.com/zoni/obsidian-export/?tab=readme-ov-file#relative-links-with-hugo ","permalink":"https://btuckerc.github.io/Blog/blog-posts/2024-12-22-setting-up-a-blog-with-obsidian-and-hugo/","summary":"\u003ch1 id=\"overview\"\u003eOverview\u003c/h1\u003e\n\u003cp\u003eThis post explores setting up a Blog with Obsidian \u0026amp; Hugo, discussing key concepts and practical applications.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" onclick=\"showLightbox('../Blog-Attachments/2024-12-22-Setting-up-a-Blog-with-Obsidian-and-Hugo-1.png')\" src=\"../Blog-Attachments/2024-12-22-Setting-up-a-Blog-with-Obsidian-and-Hugo-1.png\" style=\"cursor: pointer;\" width=\"200\"\u003e\n\u003c/p\u003e\n\u003ch1 id=\"setting-up-the-vault\"\u003eSetting Up the Vault\u003c/h1\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eln -sf /Users/tucker/Documents/GitHub/Blog/content/Blog-Posts ~/Documents/00-Vault/00\u003cspan class=\"se\"\u003e\\ \u003c/span\u003e-\u003cspan class=\"se\"\u003e\\ \u003c/span\u003eInbox/07\u003cspan class=\"se\"\u003e\\ \u003c/span\u003e-\u003cspan class=\"se\"\u003e\\ \u003c/span\u003eBLOG\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eln -sf /Users/tucker/Documents/GitHub/Blog/content/Blog-Attachments ~/Documents/00-Vault/00\u003cspan class=\"se\"\u003e\\ \u003c/span\u003e-\u003cspan class=\"se\"\u003e\\ \u003c/span\u003eInbox/07\u003cspan class=\"se\"\u003e\\ \u003c/span\u003e-\u003cspan class=\"se\"\u003e\\ \u003c/span\u003eBLOG\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ca href=\"https://github.com/zoni/obsidian-export/?tab=readme-ov-file#relative-links-with-hugo\"\n    target=\"_blank\" rel=\"noopener noreferrer\" \u003ehttps://github.com/zoni/obsidian-export/?tab=readme-ov-file#relative-links-with-hugo\u003c/a\u003e\n\u003c/p\u003e\n\u003chr\u003e","title":"Setting up a Blog with Obsidian and Hugo"}]